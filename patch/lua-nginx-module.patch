diff --git a/config b/config
index 7b1b061..805ffea 100644
--- a/config
+++ b/config
@@ -516,6 +516,6 @@ NGX_TAPSET_SRCS="$NGX_TAPSET_SRCS $ngx_addon_dir/tapset/ngx_lua.stp"
 
 CORE_INCS="$CORE_INCS $ngx_addon_dir/src/api"
 
-CFLAGS="$CFLAGS -DNDK_SET_VAR"
+CFLAGS="$CFLAGS -DNDK_SET_VAR -Wno-error=unused-variable -Wno-error=unused-function"
 
 echo "/* DO NOT EDIT! This file was automatically generated by config */" > "$ngx_addon_dir/src/ngx_http_lua_autoconf.h"
diff --git a/src/ngx_http_lua_proxy_ssl_verifyby.c b/src/ngx_http_lua_proxy_ssl_verifyby.c
index 1cb1d98..b691546 100644
--- a/src/ngx_http_lua_proxy_ssl_verifyby.c
+++ b/src/ngx_http_lua_proxy_ssl_verifyby.c
@@ -262,21 +262,6 @@ ngx_http_lua_proxy_ssl_verify_by_lua(ngx_conf_t *cf, ngx_command_t *cmd,
 int
 ngx_http_lua_proxy_ssl_verify_handler(X509_STORE_CTX *x509_store, void *arg)
 {
-#if defined(LIBRESSL_VERSION_NUMBER)
-
-    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, c->log, 0,
-        "LibreSSL does not support by proxy_ssl_verify_by_lua*");
-
-    return 1;
-
-#elif defined(OPENSSL_IS_BORINGSSL)
-
-    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, c->log, 0,
-        "BoringSSL does not support by proxy_ssl_verify_by_lua*");
-
-    return 1;
-
-#else
 
     lua_State                       *L;
     ngx_int_t                        rc;
@@ -292,6 +277,21 @@ ngx_http_lua_proxy_ssl_verify_handler(X509_STORE_CTX *x509_store, void *arg)
 
     c = ngx_ssl_get_connection(ssl_conn);  /* upstream connection */
 
+#if defined(LIBRESSL_VERSION_NUMBER)
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, c->log, 0,
+        "LibreSSL does not support by proxy_ssl_verify_by_lua*");
+
+    return 1;
+
+#elif defined(OPENSSL_IS_BORINGSSL)
+
+    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, c->log, 0,
+        "BoringSSL does not support by proxy_ssl_verify_by_lua*");
+
+    return 1;
+
+#else
     ngx_log_debug1(NGX_LOG_DEBUG_HTTP, c->log, 0,
                    "proxy ssl verify: connection reusable: %ud", c->reusable);
 
@@ -741,13 +741,13 @@ ngx_http_lua_ffi_proxy_ssl_get_verify_cert(ngx_http_request_t *r, char **err)
 
     *err = "LibreSSL does not support this function";
 
-    return NGX_ERROR;
+    return NULL;
 
 #elif defined(OPENSSL_IS_BORINGSSL)
 
     *err = "BoringSSL does not support this function";
 
-    return NGX_ERROR;
+    return NULL;
 
 #else
 
diff --git a/src/ngx_http_lua_ssl_client_helloby.c b/src/ngx_http_lua_ssl_client_helloby.c
index 283d101..1f0aa57 100644
--- a/src/ngx_http_lua_ssl_client_helloby.c
+++ b/src/ngx_http_lua_ssl_client_helloby.c
@@ -220,7 +220,7 @@ ngx_http_lua_ssl_client_hello_handler(ngx_ssl_conn_t *ssl_conn,
 
     dd("first time");
 
-#if (nginx_version > 1029001)
+#if (nginx_version > 1029001 && defined(SSL_CLIENT_HELLO_SUCCESS))
     /* see commit 0373fe5d98c1515640 for more details */
     rc = ngx_ssl_client_hello_callback(ssl_conn, al, arg);
 
